.details
  - if service_request.assigned? and service_request.responded_request_assignment_id?
    - if service_request.service_requests_assignments and (service_request.service_requests_assignments.first[:current_estimation] and service_request.service_requests_assignments.first[:current_estimation][:status] != 'accepted')
      = render 'current_requests/estimation', service_request: service_request, assignment: service_request.service_requests_assignments.first
    - else
      .assignments-wrapper.mt20
        - assignments.each do |assignment|
          .assignment-wrapper.white-container id=assignment.id
            - if assignment.responded? or assignment.customer_accepting?
              .text-center.fs20
                strong.black We`ve found a technician for you
                .red Please respond as soon as possible
              .row
                .col-sm-3.text-center
                  - if assignment.technician
                    = image_tag assignment.technician[:photo] || 'default_avatar_icon.png', class: 'img-circle', width: '100'
                .col-sm-9
                  = "#{assignment.contractor_account[:name]} can send:"
                  br/
                  = assignment.technician[:name] if assignment.technician
                  .static-rating-container
                    .star.fullStar
                    .star.fullStar
                    .star.fullStar
                    .star.fullStar
                    .star.fullStar
                  br/
                  = "Can come #{assignment.arrive_eta}"
              input type='text' placeholder= 'Tap here to enter Promo Code' class= 'w100-pct text-center mt20'
              .black.text-center.fs16.mt10
                p.mb10
                  |You must authorize a charge of
                  span.ml10
                    = "#{humanized_money_with_symbol(assignment.diagnostic_fee, symbol_after_without_space: true)}"
                .w80-pct.m-auto
                  | This covers the technician's arrival and one hour of work to fix or diagnose the problem. Once you accept this conctractor you cannot cancel and your card will be charged when the technician arrives.
                p.mt10
                  button.btn.btn-red data-target="#payment-methods" data-toggle="collapse" type="button" Accept and Authorize charge
                #payment-methods.white-container.collapse
                  strong.fs20.text-center Pick a payment method:
                  = link_to 'Default Payment Method', service_requests_service_request_assignment_start_accepting_path(assignment.id, service_request_id: service_request.id), remote: true, class: 'btn btn-grey mt10 with-ajax-loader'
                  = link_to "Pay #{humanized_money_with_symbol(assignment.diagnostic_fee, symbol_after_without_space: true)}", service_requests_service_request_assignment_payment_authorize_path(assignment.id, service_request_id: service_request.id), method: :post, remote: true, class: 'btn btn-grey mt10 with-ajax-loader'
                  br/
                = link_to 'Decline', service_requests_service_request_assignment_start_declining_path(assignment.id, service_request_id: service_request.id), remote: true, class: 'btn btn-grey mt10 with-ajax-loader'
              p.text-center.fs12.mt10
                |By Accepting you agree to out
                = link_to 'Terms of use', page_path('terms_of_use')
            - else
              = render 'current_requests/activities', service_request: service_request, activities: activities
  - else
    .assignment-wrapper.white-container
      = render 'current_requests/activities', service_request: service_request, activities: activities
  #serviceRequestDetail.modal.fade role="dialog"
    .modal-dialog
      .modal-content
        .modal-header.text-center
          = link_to '#', data: { dismiss: 'modal'}, class: 'pull-left' do
            = fa_icon 'chevron-left', class: 'fa-2x white'
          span.modal-title Service Request
        .modal-body
          strong Brand
          p
            = service_request.brand_name
          strong Model
          p
            = service_request.model
          strong Serial Number
          p
            = service_request.serial
          strong Category
          p
            = service_request.category[:name]
          strong SubCategory
          p
            = service_request.subcategory[:name]
          strong Code
          p
            = service_request.problem_code_id
          strong Notes
          p
            = service_request.fix_notes
